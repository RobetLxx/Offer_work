package LeetCode.problem;import java.util.Stack;/** * @author: lingjunhao * create at:  19/3/12  下午2:03 * @description: 面试题1的第二种解法 */public class Num001_2 {    private Stack<Integer> stackData;    private Stack<Integer> stackMin;    public Num001_2() {        this.stackData = stackData;        this.stackMin = stackMin;    }    @Override    public String toString() {        return "LeetCode.problem.Num001_2{" +                "stackData=" + stackData +                ", stackMin=" + stackMin +                '}';    }    public Stack<Integer> getStackData() {        return stackData;    }    public void setStackData(Stack<Integer> stackData) {        this.stackData = stackData;    }    public Stack<Integer> getStackMin() {        return stackMin;    }    public void setStackMin(Stack<Integer> stackMin) {        this.stackMin = stackMin;    }    public int getMin(){        if (stackMin.isEmpty()){            throw new RuntimeException("stackMin is empty!!!");        }        return stackMin.peek();//peek返回栈顶值，但不改变栈顶值    }    public void push(int newNum){        if (stackMin.isEmpty()){            stackMin.push(newNum);        }        if (newNum<=getMin()){            stackMin.push(newNum);        }else{            stackMin.push(stackMin.peek());        }        stackData.push(newNum);    }    public int pop(){        if (stackMin.isEmpty()){            throw new RuntimeException("stackMin is empty!!!");        }        int value=stackMin.pop();        return value;    }    public static void main(String[] args) {        Num001 a=new Num001();        a.push(9);        a.push(3);        a.push(8);        a.push(2);        a.push(2);        a.push(1);        System.out.println(a.toString());        System.out.println(a.pop());    }}