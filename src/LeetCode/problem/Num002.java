package LeetCode.problem;import java.util.Stack;/** * @author: lingjunhao * create at:  19/3/12  下午2:21 * @description: 面试第二题 */public class Num002 {    private Stack<Integer> stack1;//入队    private Stack<Integer> stack2;//出队    public Num002() {        stack1=new Stack<Integer>();        stack2=new Stack<Integer>();    }    @Override    public String toString() {        return "LeetCode.problem.Num002{" +                "stack1=" + stack1 +                ", stack2=" + stack2 +                '}';    }    public void add(int data){        stack1.push(data);    }    public int poll(){        if (stack1.isEmpty()&&stack2.isEmpty()){            throw new RuntimeException("Queue is empty!!!");        }else if (stack2.isEmpty()){            while (!stack1.isEmpty()){                stack2.push(stack1.pop());//将第一个栈里的元素倒着推入第二个栈，            }        }        return stack2.pop();    }    public int peek(){        if (stack1.isEmpty()&&stack2.isEmpty()){            throw new RuntimeException("Queue is empty!!!");        }else if (stack2.isEmpty()){            while (!stack1.isEmpty()){                stack2.push(stack1.pop());            }        }        int value=stack2.peek();//由于peek只是返回对列顶的元素，没有出队的操作，因此还要把data数据转回给stack1;        if (stack1.isEmpty()){            while (!stack2.isEmpty()){                stack1.push(stack2.pop());            }        }        return value;    }    public static void main(String[] args) {        Num002 x=new Num002();        x.add(8);        x.add(5);        x.add(4);        x.add(9);        x.add(7);        System.out.println(x.toString());        System.out.println(x.peek());        System.out.println(x.toString());        System.out.println(x.poll());        System.out.println(x.toString());        System.out.println(x.poll());        System.out.println(x.toString());        System.out.println(x.poll());        System.out.println(x.toString());        System.out.println(x.poll());        System.out.println(x.toString());        System.out.println(x.poll());        System.out.println(x.toString());    }}