package Offer_week3;import java.util.*;/** * @author: lingjunhao * create at:  19/5/2  上午10:00 * @description: 分行输出二叉树 */public class Solution10 {    public List<List<Integer>> printFromTopToBottom(TreeNode root) {        List<List<Integer>> list=new ArrayList<>();        Queue<TreeNode> q=new LinkedList<TreeNode>();        if (root==null)return list;        q.offer(root);        while (q.size()>0){            int size=q.size();            List<Integer> p=new ArrayList<Integer>();            while (size-->0){                TreeNode res=q.poll();                if (res==null) continue;                p.add(res.val);                q.offer(res.left);                q.offer(res.right);            }            if (p.size()>0)list.add(p);        }        return list;    }    public void levelTreeSearch(TreeNode root){        Queue<TreeNode> queue=new LinkedList<>();        if (root==null)return;        queue.offer(root);        while (!queue.isEmpty()){            TreeNode p=queue.poll();            System.out.print(p.val+" ");            if (root.left!=null){                queue.offer(root.left);            }if (root.right!=null){                queue.offer(root.right);            }        }    }    public static void main(String[] args) {        TreeNode a1=new TreeNode(2);        Solution10 x=new Solution10();        x.levelTreeSearch(a1);    }}