package Offer_week4;/** * @author: lingjunhao * create at:  19/5/2  下午12:55 * @description: 二叉搜索树的后序遍历序列 */public class Solution1 {    public static boolean verifySequenceOfBST(int [] sequence) {        int left=0;        int right=sequence.length-1;            return DFS(sequence,left,right);    }    /*    * 第一种方法*/    public static boolean DFS(int[] sequence,int l,int r){        if (l>=r)return true;        int root=sequence[r];        int k=l;        while (k<r&&sequence[k]<root){            k++;        }        for (int i = k; i < r; i++) {            if (sequence[i]<root)return false;        }        return DFS(sequence,l,k-1)&&DFS(sequence,k+1,r);    }    /*第二种方法*///    private static boolean DFS(int[] sequence, int l, int r) {//        if (l==r)return true;//        int left=0;//        boolean flag=false;//        for (int i = l ; i < r; i++) {//            if (sequence[i]>sequence[r]&&flag==false){//                left=i-1;//                flag=true;//            }//             if (sequence[i]<sequence[r]&&flag==true){//                return false;//            }//        }//        if (left==0)//            return true;//        return DFS(sequence,0,left)&&DFS(sequence,left+1,r-1);//    }}