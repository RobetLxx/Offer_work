package LeetCode.problem;import java.util.HashSet;import java.util.Set;/** * @author: lingjunhao * create at:  19/4/8  上午10:34 * @description: 最长子字符串 */public class Longest_Substring {    public int lengthOfLongestSubstring(String s) {        int length=s.length();        int ans=0,i=0,j=0;        Set<Character> set = new HashSet<>();        while (i<length&&j<length){            if (!set.contains(s.charAt(j))){                set.add(s.charAt(j++));                ans=Math.max(ans,j-i);            }            else {                set.remove(s.charAt(i++));            }        }        return ans;    }}/** 通过初始化一个Character的哈希表* 比较子字符串是否存在，如果不存在即最大子串字符串在ans和j-i之间作比较* 如果存在，则将最前面一个字符去掉继续比较。* */