package Offer_week3;/** * @author: lingjunhao * create at:  19/4/25  下午5:25 * @description:树的子结构 */class TreeNode {      int val;      TreeNode left;      TreeNode right;      TreeNode(int x) { val = x; }  }public class Solution3 {    public boolean hasSubtree(TreeNode pRoot1, TreeNode pRoot2) {        boolean res=false;        if (pRoot1!=null&&pRoot2!=null){            if (pRoot1.val==pRoot2.val) {//如果根值相同，则进行匹配，                res = helpHasSubtree(pRoot1, pRoot2);            }            if (!res){//根值不匹配，往左匹配                res=hasSubtree(pRoot1.left,pRoot2);            }if (!res){//根值不匹配，往右匹配                res=hasSubtree(pRoot1.right,pRoot2);            }        }        return res;    }    public static boolean helpHasSubtree(TreeNode root1,TreeNode root2){        if (root2==null)return true;        if (root1==null)return false;        if (root1.val!=root2.val)return false;        return helpHasSubtree(root1.left,root2.left)&&helpHasSubtree(root1.right,root2.right);    }}