package Offer_week1;/** * @author: lingjunhao * create at:  19/4/20  下午6:05 * @description: 旋转数组的最小数字 */public class Solution10 {    /*public int findMin(int[] nums) {        if (nums.length==0){            return -1;        }        int start=0;        int end=nums.length-1;        if (nums[start]<nums[end]){            return nums[start];        }        while (start<=end){            int mid=start+((end-start)>>1);            if (nums[mid]==nums[start]&&nums[mid]==nums[end]){                return min(nums,start,end);            }            if (nums[mid]>=nums[start]){                start=mid;            }else {                end=mid;            }            if (start==end-1){                break;            }        }        return nums[end];    }    public int min(int[] nums, int start, int end) {        int result=nums[start];        for (int i = start+1 ; i <= end; i++) {            if (nums[i]<result){                result=nums[i];            }        }        return result;    }*/    public int findMin(int[] nums){        int length=nums.length-1;        if (length<0)return -1;        while (nums[length]==nums[0]&&length>0)length--;//去除重复的部分        if (nums[length]>=nums[0])return nums[0];        int l=0;int r=length;        while (l<r){            int mid=l+r>>1;//[l,mid][mid+1,r]            if (nums[mid]<nums[0]){                r=mid;            }else {                l=mid+1;            }        }        return nums[r];    }}