package Offer_week3;import java.util.Stack;/** * @author: lingjunhao * create at:  19/4/25  下午8:34 * @description: 栈的压入、弹出序列 */public class Solution8{    public boolean isPopOrder(int [] pushV,int [] popV) {        int len=pushV.length;        if (len!=popV.length)return false;        if (len==0&&popV.length==0)return true;        Stack<Integer> x=new Stack<Integer>();        Stack<Integer> y=new Stack<Integer>();        int i=0,j=1;        boolean res=false;        if (pushV!=null&&popV!=null&&len>0){            x.push(pushV[0]);            for (i=0;i<len;i++){                if (x.isEmpty()){                    x.push(pushV[j]);                    j++;                }                while (popV[i]!=x.peek()&&j<pushV.length){                    x.push(pushV[j]);                    j++;                }                if (x.peek()!=popV[i]&&j>=pushV.length)                    return false;                x.pop();            }            res=true;        }        return res;    }}