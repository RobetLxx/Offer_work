package Offer_week4;import java.util.ArrayList;import java.util.List;/** * @author: lingjunhao * create at:  19/5/6  上午11:27 * @description: 二叉树中和为某一值的路径 */class TreeNode {    int val;    TreeNode left;    TreeNode right;    TreeNode(int x) { val = x; }}public class Solution2 {    public List<List<Integer>> findPath(TreeNode root, int sum) {        List<List<Integer>> list=new ArrayList<>();        if (root==null)return list;        int target=0;        List<Integer> arr= new ArrayList<>();        pre(root,sum,list,arr,target);        return list;    }    public static void pre(TreeNode root,int sum,List<List<Integer>> list,List<Integer> arr1,int target){        if (root==null){            return;        }        target+=root.val;        if (root.left==null&&root.right==null){            if (sum==target){                arr1.add(root.val);                list.add(new ArrayList<Integer>(arr1));                arr1.remove(arr1.size()-1);            }            return;        }        arr1.add(root.val);        pre(root.left,sum,list,arr1,target);        pre(root.right,sum,list,arr1,target);        arr1.remove(arr1.size()-1);        return;    }}